// Code generated by MockGen. DO NOT EDIT.
// Source: internal/broadcaster/controller/subscriber/controller.go
//
// Generated by this command:
//
//	mockgen --source=internal/broadcaster/controller/subscriber/controller.go --destination=internal/mocks/mock_broadcaster_controller.go --package=mocks --mock_names=Service=MockBroadcasterService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	websocket "github.com/gorilla/websocket"
	gomock "go.uber.org/mock/gomock"
)

// MockBroadcasterService is a mock of Service interface.
type MockBroadcasterService struct {
	ctrl     *gomock.Controller
	recorder *MockBroadcasterServiceMockRecorder
	isgomock struct{}
}

// MockBroadcasterServiceMockRecorder is the mock recorder for MockBroadcasterService.
type MockBroadcasterServiceMockRecorder struct {
	mock *MockBroadcasterService
}

// NewMockBroadcasterService creates a new mock instance.
func NewMockBroadcasterService(ctrl *gomock.Controller) *MockBroadcasterService {
	mock := &MockBroadcasterService{ctrl: ctrl}
	mock.recorder = &MockBroadcasterServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBroadcasterService) EXPECT() *MockBroadcasterServiceMockRecorder {
	return m.recorder
}

// AddClient mocks base method.
func (m *MockBroadcasterService) AddClient(conn *websocket.Conn) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddClient", conn)
}

// AddClient indicates an expected call of AddClient.
func (mr *MockBroadcasterServiceMockRecorder) AddClient(conn any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddClient", reflect.TypeOf((*MockBroadcasterService)(nil).AddClient), conn)
}

// Broadcast mocks base method.
func (m *MockBroadcasterService) Broadcast(msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Broadcast", msg)
}

// Broadcast indicates an expected call of Broadcast.
func (mr *MockBroadcasterServiceMockRecorder) Broadcast(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Broadcast", reflect.TypeOf((*MockBroadcasterService)(nil).Broadcast), msg)
}

// RemoveClient mocks base method.
func (m *MockBroadcasterService) RemoveClient(conn *websocket.Conn) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveClient", conn)
}

// RemoveClient indicates an expected call of RemoveClient.
func (mr *MockBroadcasterServiceMockRecorder) RemoveClient(conn any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveClient", reflect.TypeOf((*MockBroadcasterService)(nil).RemoveClient), conn)
}
